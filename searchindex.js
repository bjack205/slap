Search.setIndex({"docnames": ["index", "src/advanced", "src/api", "src/api/binary_ops", "src/api/copy", "src/api/function_mapping", "src/api/iterator", "src/api/linalg", "src/api/matrix", "src/api/unary_ops", "src/api/vector_ops", "src/api/vector_products", "src/basic_ops", "src/documentation", "src/getting_started", "src/indexing", "src/initialization", "src/installation", "src/linear_algebra", "src/matrix_overview"], "filenames": ["index.rst", "src/advanced.rst", "src/api.rst", "src/api/binary_ops.rst", "src/api/copy.rst", "src/api/function_mapping.rst", "src/api/iterator.rst", "src/api/linalg.rst", "src/api/matrix.rst", "src/api/unary_ops.rst", "src/api/vector_ops.rst", "src/api/vector_products.rst", "src/basic_ops.rst", "src/documentation.rst", "src/getting_started.rst", "src/indexing.rst", "src/initialization.rst", "src/installation.rst", "src/linear_algebra.rst", "src/matrix_overview.rst"], "titles": ["Welcome to slap\u2019s documentation!", "Advanced Options", "API", "binary_ops.h", "copy_matrix.h", "function_mapping.h", "iterator.h", "linalg.h", "matrix.h", "unary_ops.h", "vector_ops.h", "vector_products.h", "Basic Operations", "Documentation", "Getting Started", "Indexing", "Matrix Initialization", "Installation", "Linear Algebra", "Matrix Basics"], "terms": {"why": 0, "librari": [0, 2, 14, 17], "impl": 0, "l": [0, 7], "inear": 0, "lgebra": 0, "p": 0, "rotocol": 0, "sometim": 0, "you": [0, 8, 13], "just": [0, 8, 15], "need": [0, 7, 13, 18], "someth": [0, 8, 16], "simpl": [0, 7, 19], "can": [0, 3, 5, 7, 8, 12, 15, 16, 18], "understand": 0, "debug": 0, "work": [0, 7], "when": [0, 16], "come": 0, "linear": [0, 6, 7, 8, 12, 14, 15], "algebra": [0, 12, 14], "c": [0, 3, 5, 7, 9, 10, 11, 14, 17, 18], "go": 0, "option": 0, "ar": [0, 6, 7, 8, 11, 12, 15, 16, 18, 19], "often": 0, "huge": 0, "depend": [0, 13, 17], "difficult": 0, "instal": [0, 13], "hard": 0, "learn": 0, "read": [0, 8, 15], "i": [0, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19], "m": [0, 3, 4, 7, 8, 11, 18, 19], "look": [0, 8, 16], "bla": 0, "like": [0, 8, 10, 12, 15, 16, 18, 19], "who": 0, "would": 0, "guess": 0, "potrf": 0, "choleski": [0, 14], "decomposit": [0, 7, 12, 14, 18], "while": [0, 7, 16, 17], "most": [0, 2, 6, 8, 14, 15, 16], "packag": [0, 17], "priorit": 0, "speed": 0, "perform": [0, 7, 8, 14, 15, 18, 19], "cost": [0, 7, 15], "everyth": 0, "els": 0, "thi": [0, 2, 4, 5, 6, 7, 8, 12, 14, 15, 16, 17, 19], "follow": [0, 7, 8, 9, 14, 15, 16, 17, 18, 19], "simplic": 0, "new": [0, 8, 16, 17], "comer": 0, "should": [0, 7, 8, 14, 15, 16, 18, 19], "abl": 0, "start": [0, 9, 19], "us": [0, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19], "effect": 0, "within": [0, 8, 15, 17], "10": [0, 8, 14, 15, 18], "30": [0, 3, 5, 9, 10], "minut": 0, "readabl": 0, "code": [0, 4, 7, 11], "easi": 0, "step": 0, "through": 0, "quickli": 0, "find": [0, 10], "fix": 0, "error": [0, 4, 7, 8, 10, 11], "lightweight": [0, 16, 17, 19], "almost": 0, "ani": [0, 3, 8, 9, 11, 15, 18, 19], "platform": 0, "especi": 0, "those": 0, "limit": 0, "comput": [0, 7, 18], "The": [0, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18], "matric": [0, 3, 5, 6, 7, 8, 12, 14, 15, 16, 18], "store": [0, 5, 7, 8, 15, 18, 19], "column": [0, 7, 8, 9, 15, 16, 19], "major": [0, 9], "format": [0, 17], "all": [0, 2, 3, 5, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19], "singl": [0, 9], "data": [0, 4, 6, 7, 8, 12, 14, 15, 16, 18, 19], "type": [0, 9, 19], "doubl": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19], "have": [0, 2, 4, 5, 7, 8, 11, 16], "row": [0, 4, 6, 7, 8, 15, 16, 18, 19], "stride": [0, 5, 6, 7, 8, 15, 18, 19], "1": [0, 3, 7, 8, 9, 14, 15, 18, 19], "element": [0, 5, 6, 8, 9, 10, 11, 14, 15, 16, 19], "adjac": [0, 8, 19], "memori": [0, 4, 6, 8, 14, 15, 16, 18, 19], "A": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18], "matrix": [0, 2, 3, 4, 5, 6, 9, 10, 11, 12, 14, 15], "pointer": [0, 5, 8, 14, 15, 16, 19], "some": [0, 14, 16, 18, 19], "metadata": [0, 7], "pass": [0, 8, 15], "valu": [0, 6, 7, 8, 9, 10, 14, 15], "own": [0, 16], "user": [0, 6, 8, 15, 16, 19], "never": 0, "alloc": [0, 8, 14], "except": 0, "explicit": 0, "newmatrix": 0, "freematrix": [0, 16], "command": 0, "check": [0, 6, 7, 12, 16, 18], "primarili": 0, "respons": [0, 15], "sinc": [0, 8, 15, 18], "extens": 0, "computation": 0, "expens": [0, 8, 15], "low": [0, 8, 15], "level": [0, 8, 15], "function": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19], "index": [0, 6, 7, 14, 18], "get": [0, 8, 13, 15, 19], "fetchcont": 0, "cpm": 0, "arduino": 0, "basic": [0, 7, 9, 14, 18], "struct": [0, 6], "size": [0, 3, 4, 5, 7, 8, 9, 11, 14, 15, 16], "inform": [0, 7, 16, 18], "boolean": 0, "initi": [0, 5, 9, 15, 18, 19], "from": [0, 2, 3, 4, 7, 8, 9, 14, 15, 17, 18], "an": [0, 4, 6, 8, 9, 10, 11, 14, 15, 17, 19], "arrai": [0, 4, 6, 8, 9, 12, 14, 15, 18], "default": [0, 8, 19], "getter": [0, 19], "setter": 0, "manipul": 0, "oper": [0, 3, 5, 8, 9, 14, 15, 19], "unari": [0, 9, 14], "binari": 0, "transform": [0, 14], "multipl": [0, 9, 12, 14], "solv": [0, 7, 14], "system": [0, 7, 17], "api": [0, 19], "h": [0, 2, 12, 14, 16, 17], "unary_op": [0, 2, 12], "copy_matrix": [0, 2], "function_map": [0, 2], "iter": [0, 2, 14], "linalg": [0, 2], "vector_op": [0, 2], "vector_product": [0, 2], "linux": 0, "maco": 0, "modul": 0, "search": 0, "page": [0, 2, 19], "subpag": 2, "contain": [2, 7, 8], "docstr": 2, "It": [2, 7, 15, 18], "meant": [2, 17, 18, 19], "refer": [2, 6, 8, 15], "method": [2, 4, 5, 7, 8, 10, 12, 15, 16, 17, 18], "link": 2, "them": 2, "rest": [2, 9, 11], "document": [2, 12], "organ": 2, "mirror": 2, "header": [2, 7, 8, 9, 10, 11, 12, 16], "file": [2, 7, 8, 9, 10, 11, 15, 16], "between": [3, 8, 15, 19], "two": [3, 5, 7, 8, 10, 11, 12, 14], "author": [3, 5, 9, 10], "brian": [3, 5, 9, 10], "jackson": [3, 5, 9, 10], "bjack205": [3, 5, 9, 10, 17], "gmail": [3, 5, 9, 10], "com": [3, 5, 9, 10, 17], "copyright": [3, 5, 9, 10], "2022": [3, 5, 9, 10], "date": [3, 5, 9, 10], "2023": 3, "01": [3, 5, 9, 10, 14], "slap_matrixnormeddiffer": [3, 12, 18], "b": [3, 5, 7, 8, 14, 16, 17, 18], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 19], "norm": [3, 10, 12, 14], "differ": [3, 5, 15], "2": [3, 5, 9, 10, 11, 14], "same": [3, 4, 5, 7, 8, 15, 19], "sqrt": 3, "sum_": 3, "0": [3, 7, 8, 9, 14, 15, 16, 18, 19], "j": [3, 6, 14], "n": [3, 4, 7, 8, 9, 11, 14, 15, 18, 19], "a_": 3, "ij": 3, "b_": 3, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 19], "dimens": [3, 9, 11, 19], "nan": [3, 10, 11], "input": [3, 5, 7, 8, 11, 12, 15], "invalid": [3, 8, 11, 15], "otherwis": [3, 4, 8], "enum": [3, 4, 5, 7, 9, 11, 14, 16, 19], "slap_errorcod": [3, 4, 5, 7, 9, 11, 14, 16, 18], "slap_matrixaddit": [3, 12], "alpha": [3, 7, 9, 14, 18], "add": [3, 7, 9, 17], "scale": [3, 7, 9, 11, 14], "calcul": [3, 7, 10, 11, 12, 14, 18], "must": [3, 4, 5, 7, 8, 11, 15, 16], "alias": [3, 5, 7, 12, 18], "normal": [3, 7], "addit": [3, 7, 12, 19], "subtract": 3, "anoth": [3, 4], "place": [3, 6, 7], "out": [3, 5, 7, 8, 10, 11, 15], "destin": [3, 4, 5, 7, 8, 15], "slap_matrixcopi": [4, 14, 18], "dest": 4, "src": [4, 8, 12], "copi": [4, 14, 15, 18], "slap": [4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19], "slap_matrixcopytranspos": 4, "transpos": [4, 6, 7, 8, 12, 14, 18, 19], "slap_matrixcopyfromarrai": [4, 14], "mat": [4, 5, 6, 8, 9, 10, 15, 16, 19], "const": [4, 6, 7, 8, 9, 14, 15], "alwai": [4, 6], "order": [4, 9, 11], "underli": [4, 6, 7, 8, 15, 16, 19], "layout": 4, "so": [4, 6, 7, 8, 15, 16], "ignor": [4, 7], "whether": [4, 6, 8], "sourc": [4, 17], "least": [4, 7, 8, 11, 16], "long": [4, 14], "result": [4, 7, 8, 11, 15, 18], "undefin": [4, 7, 8, 15], "behavior": [4, 7, 8, 15], "valid": [4, 5, 6, 8, 9, 10, 15, 19], "length": [4, 9, 11], "col": [4, 8, 15, 16, 19], "appli": 5, "wise": [5, 19], "slap_map": [5, 12, 14], "everi": 5, "k": [5, 6, 8, 14, 15], "dens": [5, 6, 8, 14, 15, 18], "take": [5, 11, 12, 16, 18], "slap_binarymap": [5, 12], "pair": 5, "given": [5, 8, 15], "f": 5, "x": [5, 7, 8, 11, 14, 15, 18], "y": [5, 7, 8, 11, 13, 14, 15, 18], "output": [5, 7, 8, 14, 15], "binary_op": [5, 12], "int": [5, 6, 8, 9, 14, 15, 16, 18, 19], "main": [5, 14, 17], "clean": 5, "up": [5, 11], "For": [5, 8, 17, 18], "more": [5, 7, 12, 17], "detail": [5, 7, 17], "see": [5, 7, 8, 14, 15, 16, 17], "binarymap": 5, "test": 5, "matrix_test": 5, "cpp": 5, "provid": [5, 6, 7, 16, 18], "first": [5, 7, 9, 11, 14, 15], "argument": [5, 16, 18], "second": [5, 11], "matrixiter": [6, 10, 14], "conveni": [6, 16], "effici": [6, 14], "over": [6, 7, 14, 17, 19], "access": [6, 8, 15, 19], "via": [6, 14, 17, 18, 19], "either": [6, 11, 17, 19], "cartesian": [6, 8, 14, 15], "indic": [6, 8, 11, 15], "note": [6, 8, 14, 15, 16], "linearli": 6, "invari": 6, "gap": 6, "directli": [6, 7, 8, 14, 15, 17, 18, 19], "slap_iter": [6, 14], "slap_isfinish": [6, 14], "slap_step": [6, 14], "linear_index": 6, "slap_setel": [6, 8, 14, 15], "public": [6, 19], "member": [6, 19], "uint32_t": 6, "len": [6, 9], "uint16_t": [6, 8, 19], "dx": 6, "dy": 6, "creat": [6, 8, 9, 14, 16], "begin": [6, 7], "void": [6, 8, 14, 15, 16], "progress": 6, "one": [6, 8, 10], "updat": 6, "static": [6, 8, 15, 16, 19], "inlin": [6, 8, 15, 16, 19], "bool": [6, 8, 14, 15, 16, 19], "past": 6, "end": [6, 7], "true": [6, 7, 8, 15, 16, 19], "point": [6, 8, 10], "These": [7, 12, 16], "actual": 7, "split": 7, "among": 7, "which": [7, 8, 9, 15, 17], "includ": [7, 9, 10, 14, 16, 17], "slap_matmuladd": [7, 14, 18], "beta": [7, 14, 18], "neither": 7, "do": 7, "With": 7, "slap_transpos": [7, 8, 12, 14, 18], "slap_matmulladd": 7, "5": [7, 9, 14, 18], "also": [7, 8, 16], "slap_matmulab": [7, 14, 18], "slap_matmulatb": [7, 14, 18], "left": [7, 14], "right": 7, "factor": [7, 9, 18], "besid": 7, "state": [7, 8, 16], "etc": [7, 10, 16], "care": [7, 15], "": [7, 8, 18], "mainli": 7, "give": 7, "lowest": 7, "possibl": 7, "without": [7, 18], "t": [7, 8, 9, 11, 14, 16, 18], "similar": 7, "slap_choleski": [7, 14, 18], "squar": [7, 8, 9, 10, 14], "lower": 7, "triangular": [7, 18], "portion": [7, 18], "symmetr": 7, "There": 7, "dedic": 7, "slap_cholesky_fail": [7, 14, 18], "fail": 7, "due": 7, "neg": 7, "diagon": [7, 9, 14, 18], "isn": [7, 8], "posit": [7, 14, 18], "definit": [7, 14, 18], "slap_trisolv": [7, 18], "equat": 7, "back": [7, 14, 18], "substitut": [7, 18], "form": [7, 18], "slap_istranspos": [7, 8, 14, 18, 19], "r": [7, 18], "slap_gettyp": 7, "slap_triangular_upp": 7, "assum": [7, 16, 19], "unless": 7, "its": 7, "slap_matrixtyp": [7, 19], "inout": 7, "hand": [7, 16], "side": 7, "vector": [7, 8, 10, 11, 14, 18], "solut": [7, 18], "upon": 7, "complet": 7, "slap_choleskysolv": [7, 14, 18], "precomput": 7, "here": [7, 16, 18], "deriv": 7, "how": 7, "align": 7, "ax": 7, "impli": 7, "text": [7, 19], "err": [7, 14, 18], "printf": [7, 14, 18], "whose": 7, "slap_qr": [7, 18], "temp": [7, 18], "household": [7, 18], "reflect": [7, 18], "upper": [7, 18], "below": [7, 18], "recov": 7, "q": [7, 11, 18], "slap_computeq": [7, 18], "slap_qtb": [7, 18], "slap_leastsquar": [7, 18], "skinni": [7, 18], "number": [7, 8, 16, 19], "temporari": 7, "q_work": [7, 18], "previous": 7, "intermedi": 7, "where": [7, 8, 15, 16, 18], "orthogon": 7, "multipli": [7, 9], "problem": [7, 18], "minim": 7, "ha": [7, 16, 17], "than": [7, 9, 11], "both": [7, 8, 15, 18], "written": 7, "overwritten": 7, "slap_matrixfromarrai": [8, 14, 16], "wrap": [8, 16], "exist": [8, 16], "class": [8, 16], "common": [8, 16], "wai": [8, 12, 16, 17], "typic": [8, 16], "usag": [8, 16], "stack": [8, 14, 16], "data_stack": [8, 16], "24": [8, 16], "6": [8, 9, 14, 16, 18], "4": [8, 9, 14, 16], "heap": [8, 14, 16], "data_heap": [8, 16], "malloc": [8, 14, 16], "sizeof": [8, 14, 16], "free": [8, 14, 16], "null": [8, 15, 16, 19], "slap_nullmatrix": [8, 16], "hasn": [8, 16], "been": [8, 16], "specifi": [8, 16], "yet": [8, 16], "slap_isnul": [8, 16, 19], "slap_setnul": [8, 16], "instanc": [8, 16, 17], "set": [8, 9, 14, 15, 16, 18, 19], "flag": [8, 17], "flip": 8, "other": 8, "fals": 8, "slap_isempti": [8, 19], "empti": [8, 9], "e": [8, 15, 16], "slap_issquar": [8, 19], "still": 8, "slap_isdens": [8, 14, 15, 19], "equal": [8, 9, 14, 19], "slap_isvalid": [8, 19], "uniniti": [8, 16], "intern": [8, 16, 19], "defin": [8, 16], "slap_mindim": [8, 19], "smallest": 8, "smaller": [8, 14], "slap_numrow": [8, 14, 19], "slap_numcol": [8, 14, 19], "slap_numel": [8, 14, 15, 19], "slap_strid": [8, 18, 19], "distanc": [8, 19], "contigu": [8, 15, 19], "slap_cart2index": [8, 15, 18], "convert": [8, 15], "support": [8, 15, 17, 18], "nonzero": [8, 15], "correspond": [8, 11, 15], "bad": [8, 15], "slap_linear2cart": [8, 15], "moder": [8, 15], "reli": [8, 15], "modulu": [8, 15], "divis": [8, 15], "doe": [8, 15, 16], "slap_linear2index": [8, 15], "If": [8, 9, 11, 15], "help": [8, 15], "fairli": [8, 15], "rang": [8, 9, 14, 15], "th": [8, 15], "slap_checkinbound": [8, 15], "bound": [8, 15], "slap_getel": [8, 14, 15], "NOT": [8, 15, 16, 18], "unsaf": [8, 15], "1st": [8, 14, 15], "2nd": [8, 15], "modifi": [8, 9, 12, 14, 15], "To": [8, 13, 15, 17], "de": [8, 15], "call": [8, 14, 15, 16], "site": [8, 15], "slap_getelementconst": [8, 15], "val": [8, 9, 14, 15], "As": [8, 15, 16], "carefulli": [8, 15], "easili": [8, 15], "make": [8, 15, 18], "sure": [8, 15], "slap_flatten": [8, 12, 14], "flatten": [8, 14], "2d": 8, "chang": [8, 12, 14, 19], "now": 8, "unchang": 8, "slap_reshap": [8, 12, 14], "doesn": [8, 9], "interpret": [8, 12, 19], "onli": [8, 9, 11, 14, 16, 18], "slap_createsubmatrix": [8, 14], "resiz": [8, 14], "slap_setconst": [9, 12, 14], "each": [9, 12], "success": 9, "slap_scalebyconst": [9, 12, 14], "constant": [9, 12, 14], "fulli": 9, "non": [9, 15], "zero": [9, 16, 19], "scalar": 9, "slap_setident": [9, 12, 14], "slap_setdiagon": [9, 12, 14], "diag": [9, 14], "greater": [9, 11], "minimum": [9, 10], "touch": 9, "off": 9, "nrow": 9, "ncol": 9, "slap_addident": [9, 12, 14, 18], "ident": [9, 14], "slap_setrang": [9, 12, 14], "stop": 9, "space": 9, "fill": 9, "new_matrix": [9, 16], "slap_newmatrix": [9, 14, 16, 18], "3": [9, 11, 14, 16, 18], "9": [9, 14], "slap_freematrix": [9, 14, 16], "7": [9, 14], "8": [9, 14], "last": 9, "treat": 10, "thing": [10, 19], "maximum": [10, 18], "sum": 10, "slap_argmax": [10, 14], "max_valu": 10, "max": [10, 14], "slap_argmin": [10, 14], "min_valu": 10, "min": [10, 14, 19], "slap_max": [10, 14], "wa": 10, "slap_min": [10, 14], "slap_normtwosquar": [10, 14], "slap_normtwo": [10, 14], "slap_norminf": [10, 14], "infin": 10, "slap_normon": [10, 14], "slap_sum": 10, "slap_innerproduct": [11, 14], "inner": [11, 14], "dot": 11, "product": [11, 14], "unequ": 11, "taken": 11, "shortest": 11, "slap_quadraticform": 11, "slap_outerproduct": [11, 14], "outer": [11, 14], "hold": [11, 19], "larger": 11, "untouch": [11, 12], "dimension": 11, "slap_crossproduct": [11, 14], "z": [11, 14], "3d": 11, "cross": [11, 14], "three": 11, "matter": 11, "section": 12, "cover": [12, 15, 16, 19], "reshap": [12, 14], "advanc": [12, 14], "usual": [12, 18], "verifi": 12, "binary_opt": 12, "leav": 12, "meta": [12, 19], "later": [12, 14, 18], "build": 13, "few": 13, "sudo": 13, "apt": 13, "doxygen": 13, "sphinx": 13, "doc": [13, 14], "pip3": 13, "rtd": 13, "theme": 13, "sitemap": 13, "breath": 13, "brew": 13, "run": [14, 17], "exampl": [14, 17], "highlight": 14, "featur": 14, "repositori": [14, 17], "getting_start": 14, "stdlib": 14, "math": 14, "myfun": 14, "sin": 14, "put": 14, "welcom": 14, "op": 14, "data_a": 14, "12": 14, "11": 14, "n_row": 14, "n_col": 14, "n_el": 14, "d": 14, "pa": 14, "3g": 14, "20": 14, "after": [14, 16], "25": 14, "print": 14, "na": 14, "slap_printmatrix": 14, "partial": 14, "At": 14, "ta": 14, "vec_a": 14, "a2": [14, 18], "na2": 14, "origin": 14, "100": 14, "edit": 14, "top": [14, 18], "corner": 14, "a_res": 14, "data_b": 14, "ncopi": 14, "data_c": 14, "we": [14, 16], "re": 14, "version": [14, 19], "sub": 14, "view": 14, "2x2": 14, "a_sub": 14, "ntop": 14, "50": 14, "middl": 14, "nmiddl": 14, "bottom": 14, "slap_newmatrixzero": [14, 16], "dot_xi": 14, "2g": 14, "One": 14, "inf": 14, "argmax": 14, "argmin": 14, "z_max": 14, "z_min": 14, "it_max": 14, "it_min": 14, "nouter": 14, "alg": 14, "nc": 14, "matmuladd": 14, "w": 14, "data_a2": 14, "pd": 14, "rh": [14, 18], "caution": [14, 18], "pleas": [14, 19], "ensur": 14, "save": 14, "ncholeski": 14, "b_sub": 14, "nb": 14, "nb_sub": 14, "niter": 14, "mem_index": 14, "lin_index": 14, "row_index": 14, "col_index": 14, "b_val": 14, "2f": 14, "map": 14, "befor": 14, "cleanup": 14, "don": 14, "forget": 14, "exit_success": 14, "overhead": [15, 18], "implement": 15, "littl": 15, "correct": 15, "beforehand": 15, "avoid": 15, "referenc": 15, "object": [15, 16], "obtain": [15, 19], "switch": 15, "terminologi": 15, "cart": 15, "base": 15, "wrapper": [16, 19], "around": [16, 19], "raw": [16, 19], "best": 16, "along": [16, 19], "consid": [16, 19], "calloc": 16, "attempt": 16, "itself": 16, "conjunct": 16, "explicitli": 16, "brought": 16, "current": [17, 18], "mechan": 17, "incorpor": 17, "your": 17, "project": 17, "cmake": [17, 19], "mani": 17, "local": 17, "directori": 17, "download": 17, "ad": 17, "advantag": 17, "tradit": 17, "cmakelist": 17, "txt": 17, "fetchcontent_declar": 17, "git_repositori": 17, "http": 17, "github": 17, "git_tag": 17, "fetchcontent_makeavail": 17, "add_execut": 17, "target_link_librari": 17, "privat": [17, 19], "cpmaddpackag": 17, "gh": 17, "compliant": 17, "clone": 17, "path": 17, "id": 17, "cli": 17, "compil": 17, "sketch": 17, "arduino_slap": 17, "insid": 17, "core": 17, "avr": 17, "nano": 17, "script": 17, "simpli": 17, "slap_arduino": 17, "readm": 17, "md": 17, "mai": 17, "offici": 17, "futur": [17, 19], "simplifi": 17, "gener": 18, "addition": 18, "special": 18, "WITH": 18, "account": 18, "thei": 18, "bring": 18, "discard": 18, "descript": [18, 19], "summari": 18, "relev": 18, "less": 18, "qr": 18, "show": 18, "flow": 18, "semi": 18, "1e": 18, "recommend": 18, "extra": 18, "slap_triupp": 18, "sever": 19, "fundament": 19, "In": 19, "match": 19, "typedef": 19, "repres": 19, "precis": 19, "arbitrari": 19, "block": 19, "sy": 19, "is_transpos": 19, "mattyp": 19, "slap_getdata": 19, "field": 19, "alter": 19, "represent": 19, "subject": 19, "about": 19, "name": 19, "might": 19, "variabl": 19, "variou": 19}, "objects": {"": [[19, 0, 1, "_CPPv46Matrix", "Matrix"], [19, 1, 1, "_CPPv4N6Matrix4colsE", "Matrix::cols"], [19, 1, 1, "_CPPv4N6Matrix4dataE", "Matrix::data"], [19, 1, 1, "_CPPv4N6Matrix13is_transposedE", "Matrix::is_transposed"], [19, 1, 1, "_CPPv4N6Matrix7mattypeE", "Matrix::mattype"], [19, 1, 1, "_CPPv4N6Matrix4rowsE", "Matrix::rows"], [19, 1, 1, "_CPPv4N6Matrix2syE", "Matrix::sy"], [6, 0, 1, "_CPPv414MatrixIterator", "MatrixIterator"], [6, 1, 1, "_CPPv4N14MatrixIterator2dxE", "MatrixIterator::dx"], [6, 1, 1, "_CPPv4N14MatrixIterator2dyE", "MatrixIterator::dy"], [6, 1, 1, "_CPPv4N14MatrixIterator1iE", "MatrixIterator::i"], [6, 1, 1, "_CPPv4N14MatrixIterator5indexE", "MatrixIterator::index"], [6, 1, 1, "_CPPv4N14MatrixIterator1jE", "MatrixIterator::j"], [6, 1, 1, "_CPPv4N14MatrixIterator1kE", "MatrixIterator::k"], [6, 1, 1, "_CPPv4N14MatrixIterator3lenE", "MatrixIterator::len"], [6, 1, 1, "_CPPv4N14MatrixIterator4rowsE", "MatrixIterator::rows"], [9, 2, 1, "_CPPv416slap_AddIdentity6Matrixd", "slap_AddIdentity"], [9, 3, 1, "_CPPv416slap_AddIdentity6Matrixd", "slap_AddIdentity::alpha"], [9, 3, 1, "_CPPv416slap_AddIdentity6Matrixd", "slap_AddIdentity::mat"], [10, 2, 1, "_CPPv411slap_ArgMax6MatrixPd", "slap_ArgMax"], [10, 3, 1, "_CPPv411slap_ArgMax6MatrixPd", "slap_ArgMax::mat"], [10, 3, 1, "_CPPv411slap_ArgMax6MatrixPd", "slap_ArgMax::max_value"], [10, 2, 1, "_CPPv411slap_ArgMin6MatrixPd", "slap_ArgMin"], [10, 3, 1, "_CPPv411slap_ArgMin6MatrixPd", "slap_ArgMin::mat"], [10, 3, 1, "_CPPv411slap_ArgMin6MatrixPd", "slap_ArgMin::min_value"], [5, 2, 1, "_CPPv414slap_BinaryMap6Matrix6Matrix6MatrixPFdddE", "slap_BinaryMap"], [5, 3, 1, "_CPPv414slap_BinaryMap6Matrix6Matrix6MatrixPFdddE", "slap_BinaryMap::A"], [5, 3, 1, "_CPPv414slap_BinaryMap6Matrix6Matrix6MatrixPFdddE", "slap_BinaryMap::B"], [5, 3, 1, "_CPPv414slap_BinaryMap6Matrix6Matrix6MatrixPFdddE", "slap_BinaryMap::C"], [5, 3, 1, "_CPPv414slap_BinaryMap6Matrix6Matrix6MatrixPFdddE", "slap_BinaryMap::function"], [8, 2, 1, "_CPPv415slap_Cart2IndexK6Matrixii", "slap_Cart2Index"], [15, 2, 1, "_CPPv415slap_Cart2IndexK6Matrixii", "slap_Cart2Index"], [8, 3, 1, "_CPPv415slap_Cart2IndexK6Matrixii", "slap_Cart2Index::col"], [15, 3, 1, "_CPPv415slap_Cart2IndexK6Matrixii", "slap_Cart2Index::col"], [8, 3, 1, "_CPPv415slap_Cart2IndexK6Matrixii", "slap_Cart2Index::mat"], [15, 3, 1, "_CPPv415slap_Cart2IndexK6Matrixii", "slap_Cart2Index::mat"], [8, 3, 1, "_CPPv415slap_Cart2IndexK6Matrixii", "slap_Cart2Index::row"], [15, 3, 1, "_CPPv415slap_Cart2IndexK6Matrixii", "slap_Cart2Index::row"], [8, 2, 1, "_CPPv418slap_CheckInbounds6Matrixii", "slap_CheckInbounds"], [15, 2, 1, "_CPPv418slap_CheckInbounds6Matrixii", "slap_CheckInbounds"], [8, 3, 1, "_CPPv418slap_CheckInbounds6Matrixii", "slap_CheckInbounds::col"], [15, 3, 1, "_CPPv418slap_CheckInbounds6Matrixii", "slap_CheckInbounds::col"], [8, 3, 1, "_CPPv418slap_CheckInbounds6Matrixii", "slap_CheckInbounds::mat"], [15, 3, 1, "_CPPv418slap_CheckInbounds6Matrixii", "slap_CheckInbounds::mat"], [8, 3, 1, "_CPPv418slap_CheckInbounds6Matrixii", "slap_CheckInbounds::row"], [15, 3, 1, "_CPPv418slap_CheckInbounds6Matrixii", "slap_CheckInbounds::row"], [7, 2, 1, "_CPPv413slap_Cholesky6Matrix", "slap_Cholesky"], [7, 3, 1, "_CPPv413slap_Cholesky6Matrix", "slap_Cholesky::A"], [7, 2, 1, "_CPPv418slap_CholeskySolve6Matrix6Matrix", "slap_CholeskySolve"], [7, 3, 1, "_CPPv418slap_CholeskySolve6Matrix6Matrix", "slap_CholeskySolve::A"], [7, 3, 1, "_CPPv418slap_CholeskySolve6Matrix6Matrix", "slap_CholeskySolve::b"], [7, 2, 1, "_CPPv413slap_ComputeQ6MatrixK6MatrixK6Matrix6Matrix", "slap_ComputeQ"], [7, 3, 1, "_CPPv413slap_ComputeQ6MatrixK6MatrixK6Matrix6Matrix", "slap_ComputeQ::Q"], [7, 3, 1, "_CPPv413slap_ComputeQ6MatrixK6MatrixK6Matrix6Matrix", "slap_ComputeQ::Q_work"], [7, 3, 1, "_CPPv413slap_ComputeQ6MatrixK6MatrixK6Matrix6Matrix", "slap_ComputeQ::R"], [7, 3, 1, "_CPPv413slap_ComputeQ6MatrixK6MatrixK6Matrix6Matrix", "slap_ComputeQ::betas"], [11, 2, 1, "_CPPv417slap_CrossProduct6Matrix6Matrix6Matrix", "slap_CrossProduct"], [11, 3, 1, "_CPPv417slap_CrossProduct6Matrix6Matrix6Matrix", "slap_CrossProduct::x"], [11, 3, 1, "_CPPv417slap_CrossProduct6Matrix6Matrix6Matrix", "slap_CrossProduct::y"], [11, 3, 1, "_CPPv417slap_CrossProduct6Matrix6Matrix6Matrix", "slap_CrossProduct::z"], [8, 2, 1, "_CPPv412slap_Flatten6Matrix", "slap_Flatten"], [8, 3, 1, "_CPPv412slap_Flatten6Matrix", "slap_Flatten::mat"], [16, 2, 1, "_CPPv415slap_FreeMatrixP6Matrix", "slap_FreeMatrix"], [16, 3, 1, "_CPPv415slap_FreeMatrixP6Matrix", "slap_FreeMatrix::mat"], [19, 2, 1, "_CPPv412slap_GetData6Matrix", "slap_GetData"], [19, 3, 1, "_CPPv412slap_GetData6Matrix", "slap_GetData::mat"], [8, 2, 1, "_CPPv415slap_GetElement6Matrixii", "slap_GetElement"], [15, 2, 1, "_CPPv415slap_GetElement6Matrixii", "slap_GetElement"], [8, 3, 1, "_CPPv415slap_GetElement6Matrixii", "slap_GetElement::col"], [15, 3, 1, "_CPPv415slap_GetElement6Matrixii", "slap_GetElement::col"], [8, 3, 1, "_CPPv415slap_GetElement6Matrixii", "slap_GetElement::mat"], [15, 3, 1, "_CPPv415slap_GetElement6Matrixii", "slap_GetElement::mat"], [8, 3, 1, "_CPPv415slap_GetElement6Matrixii", "slap_GetElement::row"], [15, 3, 1, "_CPPv415slap_GetElement6Matrixii", "slap_GetElement::row"], [8, 2, 1, "_CPPv420slap_GetElementConstK6Matrixii", "slap_GetElementConst"], [15, 2, 1, "_CPPv420slap_GetElementConstK6Matrixii", "slap_GetElementConst"], [8, 3, 1, "_CPPv420slap_GetElementConstK6Matrixii", "slap_GetElementConst::col"], [15, 3, 1, "_CPPv420slap_GetElementConstK6Matrixii", "slap_GetElementConst::col"], [8, 3, 1, "_CPPv420slap_GetElementConstK6Matrixii", "slap_GetElementConst::mat"], [15, 3, 1, "_CPPv420slap_GetElementConstK6Matrixii", "slap_GetElementConst::mat"], [8, 3, 1, "_CPPv420slap_GetElementConstK6Matrixii", "slap_GetElementConst::row"], [15, 3, 1, "_CPPv420slap_GetElementConstK6Matrixii", "slap_GetElementConst::row"], [11, 2, 1, "_CPPv417slap_InnerProduct6Matrix6Matrix", "slap_InnerProduct"], [11, 3, 1, "_CPPv417slap_InnerProduct6Matrix6Matrix", "slap_InnerProduct::x"], [11, 3, 1, "_CPPv417slap_InnerProduct6Matrix6Matrix", "slap_InnerProduct::y"], [8, 2, 1, "_CPPv412slap_IsDense6Matrix", "slap_IsDense"], [8, 3, 1, "_CPPv412slap_IsDense6Matrix", "slap_IsDense::mat"], [8, 2, 1, "_CPPv412slap_IsEmpty6Matrix", "slap_IsEmpty"], [8, 3, 1, "_CPPv412slap_IsEmpty6Matrix", "slap_IsEmpty::mat"], [6, 2, 1, "_CPPv415slap_IsFinishedPK14MatrixIterator", "slap_IsFinished"], [6, 3, 1, "_CPPv415slap_IsFinishedPK14MatrixIterator", "slap_IsFinished::iterator"], [8, 2, 1, "_CPPv411slap_IsNull6Matrix", "slap_IsNull"], [16, 2, 1, "_CPPv411slap_IsNull6Matrix", "slap_IsNull"], [8, 3, 1, "_CPPv411slap_IsNull6Matrix", "slap_IsNull::mat"], [16, 3, 1, "_CPPv411slap_IsNull6Matrix", "slap_IsNull::mat"], [8, 2, 1, "_CPPv413slap_IsSquare6Matrix", "slap_IsSquare"], [8, 3, 1, "_CPPv413slap_IsSquare6Matrix", "slap_IsSquare::mat"], [8, 2, 1, "_CPPv417slap_IsTransposed6Matrix", "slap_IsTransposed"], [8, 3, 1, "_CPPv417slap_IsTransposed6Matrix", "slap_IsTransposed::mat"], [8, 2, 1, "_CPPv412slap_IsValid6Matrix", "slap_IsValid"], [8, 3, 1, "_CPPv412slap_IsValid6Matrix", "slap_IsValid::mat"], [6, 2, 1, "_CPPv413slap_Iterator6Matrix", "slap_Iterator"], [6, 3, 1, "_CPPv413slap_Iterator6Matrix", "slap_Iterator::mat"], [7, 2, 1, "_CPPv417slap_LeastSquares6Matrix6Matrix6Matrix6Matrix", "slap_LeastSquares"], [7, 3, 1, "_CPPv417slap_LeastSquares6Matrix6Matrix6Matrix6Matrix", "slap_LeastSquares::A"], [7, 3, 1, "_CPPv417slap_LeastSquares6Matrix6Matrix6Matrix6Matrix", "slap_LeastSquares::b"], [7, 3, 1, "_CPPv417slap_LeastSquares6Matrix6Matrix6Matrix6Matrix", "slap_LeastSquares::betas"], [7, 3, 1, "_CPPv417slap_LeastSquares6Matrix6Matrix6Matrix6Matrix", "slap_LeastSquares::temp"], [8, 2, 1, "_CPPv416slap_Linear2Cart6MatrixiPiPi", "slap_Linear2Cart"], [15, 2, 1, "_CPPv416slap_Linear2Cart6MatrixiPiPi", "slap_Linear2Cart"], [8, 3, 1, "_CPPv416slap_Linear2Cart6MatrixiPiPi", "slap_Linear2Cart::col"], [15, 3, 1, "_CPPv416slap_Linear2Cart6MatrixiPiPi", "slap_Linear2Cart::col"], [8, 3, 1, "_CPPv416slap_Linear2Cart6MatrixiPiPi", "slap_Linear2Cart::k"], [15, 3, 1, "_CPPv416slap_Linear2Cart6MatrixiPiPi", "slap_Linear2Cart::k"], [8, 3, 1, "_CPPv416slap_Linear2Cart6MatrixiPiPi", "slap_Linear2Cart::mat"], [15, 3, 1, "_CPPv416slap_Linear2Cart6MatrixiPiPi", "slap_Linear2Cart::mat"], [8, 3, 1, "_CPPv416slap_Linear2Cart6MatrixiPiPi", "slap_Linear2Cart::row"], [15, 3, 1, "_CPPv416slap_Linear2Cart6MatrixiPiPi", "slap_Linear2Cart::row"], [8, 2, 1, "_CPPv417slap_Linear2IndexK6Matrixi", "slap_Linear2Index"], [15, 2, 1, "_CPPv417slap_Linear2IndexK6Matrixi", "slap_Linear2Index"], [8, 3, 1, "_CPPv417slap_Linear2IndexK6Matrixi", "slap_Linear2Index::k"], [15, 3, 1, "_CPPv417slap_Linear2IndexK6Matrixi", "slap_Linear2Index::k"], [8, 3, 1, "_CPPv417slap_Linear2IndexK6Matrixi", "slap_Linear2Index::mat"], [15, 3, 1, "_CPPv417slap_Linear2IndexK6Matrixi", "slap_Linear2Index::mat"], [5, 2, 1, "_CPPv48slap_Map6MatrixPFddE", "slap_Map"], [5, 3, 1, "_CPPv48slap_Map6MatrixPFddE", "slap_Map::function"], [5, 3, 1, "_CPPv48slap_Map6MatrixPFddE", "slap_Map::mat"], [7, 2, 1, "_CPPv413slap_MatMulAB6Matrix6Matrix6Matrix", "slap_MatMulAB"], [7, 3, 1, "_CPPv413slap_MatMulAB6Matrix6Matrix6Matrix", "slap_MatMulAB::A"], [7, 3, 1, "_CPPv413slap_MatMulAB6Matrix6Matrix6Matrix", "slap_MatMulAB::B"], [7, 3, 1, "_CPPv413slap_MatMulAB6Matrix6Matrix6Matrix", "slap_MatMulAB::C"], [7, 2, 1, "_CPPv414slap_MatMulAdd6Matrix6Matrix6Matrixdd", "slap_MatMulAdd"], [7, 3, 1, "_CPPv414slap_MatMulAdd6Matrix6Matrix6Matrixdd", "slap_MatMulAdd::A"], [7, 3, 1, "_CPPv414slap_MatMulAdd6Matrix6Matrix6Matrixdd", "slap_MatMulAdd::B"], [7, 3, 1, "_CPPv414slap_MatMulAdd6Matrix6Matrix6Matrixdd", "slap_MatMulAdd::C"], [7, 3, 1, "_CPPv414slap_MatMulAdd6Matrix6Matrix6Matrixdd", "slap_MatMulAdd::alpha"], [7, 3, 1, "_CPPv414slap_MatMulAdd6Matrix6Matrix6Matrixdd", "slap_MatMulAdd::beta"], [7, 2, 1, "_CPPv414slap_MatMulAtB6Matrix6Matrix6Matrix", "slap_MatMulAtB"], [7, 2, 1, "_CPPv414slap_MatMulAtB6Matrix6Matrix6Matrix", "slap_MatMulAtB"], [7, 3, 1, "_CPPv414slap_MatMulAtB6Matrix6Matrix6Matrix", "slap_MatMulAtB::A"], [7, 3, 1, "_CPPv414slap_MatMulAtB6Matrix6Matrix6Matrix", "slap_MatMulAtB::A"], [7, 3, 1, "_CPPv414slap_MatMulAtB6Matrix6Matrix6Matrix", "slap_MatMulAtB::B"], [7, 3, 1, "_CPPv414slap_MatMulAtB6Matrix6Matrix6Matrix", "slap_MatMulAtB::B"], [7, 3, 1, "_CPPv414slap_MatMulAtB6Matrix6Matrix6Matrix", "slap_MatMulAtB::C"], [7, 3, 1, "_CPPv414slap_MatMulAtB6Matrix6Matrix6Matrix", "slap_MatMulAtB::C"], [3, 2, 1, "_CPPv419slap_MatrixAddition6Matrix6Matrix6Matrixd", "slap_MatrixAddition"], [3, 3, 1, "_CPPv419slap_MatrixAddition6Matrix6Matrix6Matrixd", "slap_MatrixAddition::A"], [3, 3, 1, "_CPPv419slap_MatrixAddition6Matrix6Matrix6Matrixd", "slap_MatrixAddition::B"], [3, 3, 1, "_CPPv419slap_MatrixAddition6Matrix6Matrix6Matrixd", "slap_MatrixAddition::C"], [3, 3, 1, "_CPPv419slap_MatrixAddition6Matrix6Matrix6Matrixd", "slap_MatrixAddition::alpha"], [4, 2, 1, "_CPPv415slap_MatrixCopy6Matrix6Matrix", "slap_MatrixCopy"], [4, 3, 1, "_CPPv415slap_MatrixCopy6Matrix6Matrix", "slap_MatrixCopy::dest"], [4, 3, 1, "_CPPv415slap_MatrixCopy6Matrix6Matrix", "slap_MatrixCopy::src"], [4, 2, 1, "_CPPv424slap_MatrixCopyFromArray6MatrixPKd", "slap_MatrixCopyFromArray"], [4, 3, 1, "_CPPv424slap_MatrixCopyFromArray6MatrixPKd", "slap_MatrixCopyFromArray::data"], [4, 3, 1, "_CPPv424slap_MatrixCopyFromArray6MatrixPKd", "slap_MatrixCopyFromArray::mat"], [4, 2, 1, "_CPPv424slap_MatrixCopyTranspose6Matrix6Matrix", "slap_MatrixCopyTranspose"], [4, 3, 1, "_CPPv424slap_MatrixCopyTranspose6Matrix6Matrix", "slap_MatrixCopyTranspose::dest"], [4, 3, 1, "_CPPv424slap_MatrixCopyTranspose6Matrix6Matrix", "slap_MatrixCopyTranspose::src"], [8, 2, 1, "_CPPv420slap_MatrixFromArrayiiPd", "slap_MatrixFromArray"], [16, 2, 1, "_CPPv420slap_MatrixFromArrayiiPd", "slap_MatrixFromArray"], [8, 3, 1, "_CPPv420slap_MatrixFromArrayiiPd", "slap_MatrixFromArray::cols"], [16, 3, 1, "_CPPv420slap_MatrixFromArrayiiPd", "slap_MatrixFromArray::cols"], [8, 3, 1, "_CPPv420slap_MatrixFromArrayiiPd", "slap_MatrixFromArray::data"], [16, 3, 1, "_CPPv420slap_MatrixFromArrayiiPd", "slap_MatrixFromArray::data"], [8, 3, 1, "_CPPv420slap_MatrixFromArrayiiPd", "slap_MatrixFromArray::rows"], [16, 3, 1, "_CPPv420slap_MatrixFromArrayiiPd", "slap_MatrixFromArray::rows"], [3, 2, 1, "_CPPv427slap_MatrixNormedDifference6Matrix6Matrix", "slap_MatrixNormedDifference"], [3, 3, 1, "_CPPv427slap_MatrixNormedDifference6Matrix6Matrix", "slap_MatrixNormedDifference::A"], [3, 3, 1, "_CPPv427slap_MatrixNormedDifference6Matrix6Matrix", "slap_MatrixNormedDifference::B"], [10, 2, 1, "_CPPv48slap_Max6Matrix", "slap_Max"], [10, 3, 1, "_CPPv48slap_Max6Matrix", "slap_Max::mat"], [10, 2, 1, "_CPPv48slap_Min6Matrix", "slap_Min"], [10, 3, 1, "_CPPv48slap_Min6Matrix", "slap_Min::mat"], [8, 2, 1, "_CPPv411slap_MinDim6Matrix", "slap_MinDim"], [8, 3, 1, "_CPPv411slap_MinDim6Matrix", "slap_MinDim::mat"], [16, 2, 1, "_CPPv414slap_NewMatrixii", "slap_NewMatrix"], [16, 3, 1, "_CPPv414slap_NewMatrixii", "slap_NewMatrix::cols"], [16, 3, 1, "_CPPv414slap_NewMatrixii", "slap_NewMatrix::rows"], [16, 2, 1, "_CPPv419slap_NewMatrixZerosii", "slap_NewMatrixZeros"], [16, 3, 1, "_CPPv419slap_NewMatrixZerosii", "slap_NewMatrixZeros::cols"], [16, 3, 1, "_CPPv419slap_NewMatrixZerosii", "slap_NewMatrixZeros::rows"], [10, 2, 1, "_CPPv412slap_NormInf6Matrix", "slap_NormInf"], [10, 3, 1, "_CPPv412slap_NormInf6Matrix", "slap_NormInf::mat"], [10, 2, 1, "_CPPv412slap_NormOne6Matrix", "slap_NormOne"], [10, 3, 1, "_CPPv412slap_NormOne6Matrix", "slap_NormOne::mat"], [10, 2, 1, "_CPPv412slap_NormTwo6Matrix", "slap_NormTwo"], [10, 3, 1, "_CPPv412slap_NormTwo6Matrix", "slap_NormTwo::mat"], [10, 2, 1, "_CPPv419slap_NormTwoSquared6Matrix", "slap_NormTwoSquared"], [10, 3, 1, "_CPPv419slap_NormTwoSquared6Matrix", "slap_NormTwoSquared::mat"], [8, 2, 1, "_CPPv415slap_NullMatrixv", "slap_NullMatrix"], [16, 2, 1, "_CPPv415slap_NullMatrixv", "slap_NullMatrix"], [8, 2, 1, "_CPPv412slap_NumCols6Matrix", "slap_NumCols"], [8, 3, 1, "_CPPv412slap_NumCols6Matrix", "slap_NumCols::mat"], [8, 2, 1, "_CPPv416slap_NumElementsK6Matrix", "slap_NumElements"], [8, 3, 1, "_CPPv416slap_NumElementsK6Matrix", "slap_NumElements::mat"], [8, 2, 1, "_CPPv412slap_NumRows6Matrix", "slap_NumRows"], [8, 3, 1, "_CPPv412slap_NumRows6Matrix", "slap_NumRows::mat"], [11, 2, 1, "_CPPv417slap_OuterProduct6Matrix6Matrix6Matrix", "slap_OuterProduct"], [11, 3, 1, "_CPPv417slap_OuterProduct6Matrix6Matrix6Matrix", "slap_OuterProduct::C"], [11, 3, 1, "_CPPv417slap_OuterProduct6Matrix6Matrix6Matrix", "slap_OuterProduct::x"], [11, 3, 1, "_CPPv417slap_OuterProduct6Matrix6Matrix6Matrix", "slap_OuterProduct::y"], [7, 2, 1, "_CPPv47slap_QR6Matrix6Matrix6Matrix", "slap_QR"], [7, 3, 1, "_CPPv47slap_QR6Matrix6Matrix6Matrix", "slap_QR::A"], [7, 3, 1, "_CPPv47slap_QR6Matrix6Matrix6Matrix", "slap_QR::betas"], [7, 3, 1, "_CPPv47slap_QR6Matrix6Matrix6Matrix", "slap_QR::temp"], [7, 2, 1, "_CPPv48slap_QtbK6MatrixK6Matrix6Matrix", "slap_Qtb"], [7, 3, 1, "_CPPv48slap_QtbK6MatrixK6Matrix6Matrix", "slap_Qtb::R"], [7, 3, 1, "_CPPv48slap_QtbK6MatrixK6Matrix6Matrix", "slap_Qtb::b"], [7, 3, 1, "_CPPv48slap_QtbK6MatrixK6Matrix6Matrix", "slap_Qtb::betas"], [11, 2, 1, "_CPPv418slap_QuadraticForm6Matrix6Matrix6Matrix", "slap_QuadraticForm"], [11, 3, 1, "_CPPv418slap_QuadraticForm6Matrix6Matrix6Matrix", "slap_QuadraticForm::Q"], [11, 3, 1, "_CPPv418slap_QuadraticForm6Matrix6Matrix6Matrix", "slap_QuadraticForm::x"], [11, 3, 1, "_CPPv418slap_QuadraticForm6Matrix6Matrix6Matrix", "slap_QuadraticForm::y"], [8, 2, 1, "_CPPv412slap_Reshape6Matrixii", "slap_Reshape"], [8, 3, 1, "_CPPv412slap_Reshape6Matrixii", "slap_Reshape::cols"], [8, 3, 1, "_CPPv412slap_Reshape6Matrixii", "slap_Reshape::mat"], [8, 3, 1, "_CPPv412slap_Reshape6Matrixii", "slap_Reshape::rows"], [9, 2, 1, "_CPPv417slap_ScaleByConst6Matrixd", "slap_ScaleByConst"], [9, 3, 1, "_CPPv417slap_ScaleByConst6Matrixd", "slap_ScaleByConst::alpha"], [9, 3, 1, "_CPPv417slap_ScaleByConst6Matrixd", "slap_ScaleByConst::mat"], [9, 2, 1, "_CPPv413slap_SetConst6Matrixd", "slap_SetConst"], [9, 3, 1, "_CPPv413slap_SetConst6Matrixd", "slap_SetConst::mat"], [9, 3, 1, "_CPPv413slap_SetConst6Matrixd", "slap_SetConst::val"], [9, 2, 1, "_CPPv416slap_SetDiagonal6MatrixPKdi", "slap_SetDiagonal"], [9, 3, 1, "_CPPv416slap_SetDiagonal6MatrixPKdi", "slap_SetDiagonal::diag"], [9, 3, 1, "_CPPv416slap_SetDiagonal6MatrixPKdi", "slap_SetDiagonal::len"], [9, 3, 1, "_CPPv416slap_SetDiagonal6MatrixPKdi", "slap_SetDiagonal::mat"], [8, 2, 1, "_CPPv415slap_SetElement6Matrixiid", "slap_SetElement"], [15, 2, 1, "_CPPv415slap_SetElement6Matrixiid", "slap_SetElement"], [8, 3, 1, "_CPPv415slap_SetElement6Matrixiid", "slap_SetElement::col"], [15, 3, 1, "_CPPv415slap_SetElement6Matrixiid", "slap_SetElement::col"], [8, 3, 1, "_CPPv415slap_SetElement6Matrixiid", "slap_SetElement::mat"], [15, 3, 1, "_CPPv415slap_SetElement6Matrixiid", "slap_SetElement::mat"], [8, 3, 1, "_CPPv415slap_SetElement6Matrixiid", "slap_SetElement::row"], [15, 3, 1, "_CPPv415slap_SetElement6Matrixiid", "slap_SetElement::row"], [8, 3, 1, "_CPPv415slap_SetElement6Matrixiid", "slap_SetElement::val"], [15, 3, 1, "_CPPv415slap_SetElement6Matrixiid", "slap_SetElement::val"], [9, 2, 1, "_CPPv416slap_SetIdentity6Matrixd", "slap_SetIdentity"], [9, 3, 1, "_CPPv416slap_SetIdentity6Matrixd", "slap_SetIdentity::mat"], [9, 3, 1, "_CPPv416slap_SetIdentity6Matrixd", "slap_SetIdentity::val"], [8, 2, 1, "_CPPv412slap_SetNullP6Matrix", "slap_SetNull"], [16, 2, 1, "_CPPv412slap_SetNullP6Matrix", "slap_SetNull"], [8, 3, 1, "_CPPv412slap_SetNullP6Matrix", "slap_SetNull::mat"], [16, 3, 1, "_CPPv412slap_SetNullP6Matrix", "slap_SetNull::mat"], [9, 2, 1, "_CPPv413slap_SetRange6Matrixdd", "slap_SetRange"], [9, 3, 1, "_CPPv413slap_SetRange6Matrixdd", "slap_SetRange::mat"], [9, 3, 1, "_CPPv413slap_SetRange6Matrixdd", "slap_SetRange::start"], [9, 3, 1, "_CPPv413slap_SetRange6Matrixdd", "slap_SetRange::stop"], [6, 2, 1, "_CPPv49slap_StepP14MatrixIterator", "slap_Step"], [6, 3, 1, "_CPPv49slap_StepP14MatrixIterator", "slap_Step::iterator"], [8, 2, 1, "_CPPv411slap_StrideK6Matrix", "slap_Stride"], [8, 3, 1, "_CPPv411slap_StrideK6Matrix", "slap_Stride::mat"], [10, 2, 1, "_CPPv48slap_Sum6Matrix", "slap_Sum"], [10, 3, 1, "_CPPv48slap_Sum6Matrix", "slap_Sum::mat"], [8, 2, 1, "_CPPv414slap_Transpose6Matrix", "slap_Transpose"], [8, 3, 1, "_CPPv414slap_Transpose6Matrix", "slap_Transpose::mat"], [7, 2, 1, "_CPPv413slap_TriSolve6Matrix6Matrix", "slap_TriSolve"], [7, 3, 1, "_CPPv413slap_TriSolve6Matrix6Matrix", "slap_TriSolve::L"], [7, 3, 1, "_CPPv413slap_TriSolve6Matrix6Matrix", "slap_TriSolve::b"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:member", "2": "cpp:function", "3": "cpp:functionParam"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "member", "C++ member"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"]}, "titleterms": {"welcom": 0, "slap": 0, "": 0, "document": [0, 13], "prioriti": 0, "kei": 0, "design": 0, "principl": 0, "tabl": 0, "content": 0, "indic": 0, "advanc": 1, "option": 1, "api": 2, "binary_op": 3, "h": [3, 4, 5, 6, 7, 8, 9, 10, 11], "exampl": [3, 5, 6, 7, 8, 9, 15, 16, 18], "copy_matrix": 4, "function_map": 5, "iter": 6, "linalg": 7, "matrix": [7, 8, 16, 18, 19], "multipl": [7, 18], "choleski": [7, 18], "qr": 7, "initi": [8, 16], "boolean": [8, 19], "check": [8, 15, 19], "dimens": 8, "index": [8, 15], "transform": [8, 12], "unary_op": 9, "vector_op": 10, "vector_product": 11, "basic": [12, 19], "oper": 12, "unari": 12, "binari": 12, "linux": 13, "maco": 13, "get": 14, "start": 14, "getter": 15, "setter": 15, "manipul": 15, "error": 15, "from": 16, "an": 16, "arrai": 16, "default": 16, "alloc": 16, "instal": 17, "fetchcont": 17, "cpm": 17, "arduino": 17, "linear": 18, "algebra": 18, "solv": 18, "system": 18, "least": 18, "squar": 18, "The": 19, "struct": 19, "size": 19, "inform": 19}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Welcome to slap\u2019s documentation!": [[0, "welcome-to-slap-s-documentation"]], "Priorities": [[0, "priorities"]], "Key Design Principles": [[0, "key-design-principles"]], "Table of Contents": [[0, "table-of-contents"]], "Indices and tables": [[0, "indices-and-tables"]], "Advanced Options": [[1, "advanced-options"]], "API": [[2, "api"]], "binary_ops.h": [[3, "binary-ops-h"]], "Examples": [[3, "binary__ops_8h_1autotoc_md0"], [7, "matmul_8h_1autotoc_md4"]], "copy_matrix.h": [[4, "copy-matrix-h"]], "function_mapping.h": [[5, "function-mapping-h"]], "Example": [[5, "group__Advanced_1autotoc_md2"], [6, "group__Advanced_1autotoc_md3"], [7, "group__LinearAlgebra_1autotoc_md1"], [8, "group__Basics_1autotoc_md5"], [8, "group__Basics_1autotoc_md6"], [8, "group__Basics_1autotoc_md7"], [8, "group__Basics_1autotoc_md8"], [9, "group__Basics_1autotoc_md11"], [15, "group__Basics_1autotoc_md6"], [15, "group__Basics_1autotoc_md7"], [15, "group__Basics_1autotoc_md8"], [16, "group__Basics_1autotoc_md5"], [16, "new__matrix_8h_1autotoc_md9"], [16, "new__matrix_8h_1autotoc_md10"]], "iterator.h": [[6, "iterator-h"]], "linalg.h": [[7, "linalg-h"]], "Matrix Multiplication": [[7, "matrix-multiplication"], [18, "matrix-multiplication"]], "Cholesky": [[7, "cholesky"]], "QR": [[7, "qr"]], "matrix.h": [[8, "matrix-h"]], "Initialization": [[8, "initialization"]], "Boolean Checks": [[8, "boolean-checks"], [19, "boolean-checks"]], "Dimensions": [[8, "dimensions"]], "Indexing": [[8, "indexing"], [15, "indexing"]], "Transformations": [[8, "transformations"], [12, "transformations"]], "unary_ops.h": [[9, "unary-ops-h"]], "vector_ops.h": [[10, "vector-ops-h"]], "vector_products.h": [[11, "vector-products-h"]], "Basic Operations": [[12, "basic-operations"]], "Unary Operations": [[12, "unary-operations"]], "Binary Operations": [[12, "binary-operations"]], "Documentation": [[13, "documentation"]], "Linux": [[13, "linux"]], "MacOS": [[13, "macos"]], "Getting Started": [[14, "getting-started"]], "Getters": [[15, "getters"]], "Setters": [[15, "setters"]], "Index Manipulation": [[15, "index-manipulation"]], "Error Checking": [[15, "error-checking"]], "Matrix Initialization": [[16, "matrix-initialization"]], "From an Array": [[16, "from-an-array"]], "Default Initialization": [[16, "default-initialization"]], "Allocating Initialization": [[16, "allocating-initialization"]], "Installation": [[17, "installation"]], "FetchContent": [[17, "fetchcontent"]], "CPM": [[17, "id1"]], "Arduino": [[17, "arduino"]], "Linear Algebra": [[18, "linear-algebra"]], "Solving Linear Systems": [[18, "solving-linear-systems"]], "Cholesky Example": [[18, "cholesky-example"]], "Least Squares Example": [[18, "least-squares-example"]], "Matrix Basics": [[19, "matrix-basics"]], "The Matrix struct": [[19, "the-matrix-struct"]], "Size Information": [[19, "size-information"]]}, "indexentries": {"slap_matrixaddition (c++ function)": [[3, "_CPPv419slap_MatrixAddition6Matrix6Matrix6Matrixd"]], "slap_matrixnormeddifference (c++ function)": [[3, "_CPPv427slap_MatrixNormedDifference6Matrix6Matrix"]], "slap_matrixcopy (c++ function)": [[4, "_CPPv415slap_MatrixCopy6Matrix6Matrix"]], "slap_matrixcopyfromarray (c++ function)": [[4, "_CPPv424slap_MatrixCopyFromArray6MatrixPKd"]], "slap_matrixcopytranspose (c++ function)": [[4, "_CPPv424slap_MatrixCopyTranspose6Matrix6Matrix"]], "slap_binarymap (c++ function)": [[5, "_CPPv414slap_BinaryMap6Matrix6Matrix6MatrixPFdddE"]], "slap_map (c++ function)": [[5, "_CPPv48slap_Map6MatrixPFddE"]], "matrixiterator (c++ struct)": [[6, "_CPPv414MatrixIterator"]], "matrixiterator::dx (c++ member)": [[6, "_CPPv4N14MatrixIterator2dxE"]], "matrixiterator::dy (c++ member)": [[6, "_CPPv4N14MatrixIterator2dyE"]], "matrixiterator::i (c++ member)": [[6, "_CPPv4N14MatrixIterator1iE"]], "matrixiterator::index (c++ member)": [[6, "_CPPv4N14MatrixIterator5indexE"]], "matrixiterator::j (c++ member)": [[6, "_CPPv4N14MatrixIterator1jE"]], "matrixiterator::k (c++ member)": [[6, "_CPPv4N14MatrixIterator1kE"]], "matrixiterator::len (c++ member)": [[6, "_CPPv4N14MatrixIterator3lenE"]], "matrixiterator::rows (c++ member)": [[6, "_CPPv4N14MatrixIterator4rowsE"]], "slap_isfinished (c++ function)": [[6, "_CPPv415slap_IsFinishedPK14MatrixIterator"]], "slap_iterator (c++ function)": [[6, "_CPPv413slap_Iterator6Matrix"]], "slap_step (c++ function)": [[6, "_CPPv49slap_StepP14MatrixIterator"]], "slap_cholesky (c++ function)": [[7, "_CPPv413slap_Cholesky6Matrix"]], "slap_choleskysolve (c++ function)": [[7, "_CPPv418slap_CholeskySolve6Matrix6Matrix"]], "slap_computeq (c++ function)": [[7, "_CPPv413slap_ComputeQ6MatrixK6MatrixK6Matrix6Matrix"]], "slap_leastsquares (c++ function)": [[7, "_CPPv417slap_LeastSquares6Matrix6Matrix6Matrix6Matrix"]], "slap_matmulab (c++ function)": [[7, "_CPPv413slap_MatMulAB6Matrix6Matrix6Matrix"]], "slap_matmuladd (c++ function)": [[7, "_CPPv414slap_MatMulAdd6Matrix6Matrix6Matrixdd"]], "slap_matmulatb (c++ function)": [[7, "_CPPv414slap_MatMulAtB6Matrix6Matrix6Matrix"]], "slap_qr (c++ function)": [[7, "_CPPv47slap_QR6Matrix6Matrix6Matrix"]], "slap_qtb (c++ function)": [[7, "_CPPv48slap_QtbK6MatrixK6Matrix6Matrix"]], "slap_trisolve (c++ function)": [[7, "_CPPv413slap_TriSolve6Matrix6Matrix"]], "slap_cart2index (c++ function)": [[8, "_CPPv415slap_Cart2IndexK6Matrixii"], [15, "_CPPv415slap_Cart2IndexK6Matrixii"]], "slap_checkinbounds (c++ function)": [[8, "_CPPv418slap_CheckInbounds6Matrixii"], [15, "_CPPv418slap_CheckInbounds6Matrixii"]], "slap_flatten (c++ function)": [[8, "_CPPv412slap_Flatten6Matrix"]], "slap_getelement (c++ function)": [[8, "_CPPv415slap_GetElement6Matrixii"], [15, "_CPPv415slap_GetElement6Matrixii"]], "slap_getelementconst (c++ function)": [[8, "_CPPv420slap_GetElementConstK6Matrixii"], [15, "_CPPv420slap_GetElementConstK6Matrixii"]], "slap_isdense (c++ function)": [[8, "_CPPv412slap_IsDense6Matrix"]], "slap_isempty (c++ function)": [[8, "_CPPv412slap_IsEmpty6Matrix"]], "slap_isnull (c++ function)": [[8, "_CPPv411slap_IsNull6Matrix"], [16, "_CPPv411slap_IsNull6Matrix"]], "slap_issquare (c++ function)": [[8, "_CPPv413slap_IsSquare6Matrix"]], "slap_istransposed (c++ function)": [[8, "_CPPv417slap_IsTransposed6Matrix"]], "slap_isvalid (c++ function)": [[8, "_CPPv412slap_IsValid6Matrix"]], "slap_linear2cart (c++ function)": [[8, "_CPPv416slap_Linear2Cart6MatrixiPiPi"], [15, "_CPPv416slap_Linear2Cart6MatrixiPiPi"]], "slap_linear2index (c++ function)": [[8, "_CPPv417slap_Linear2IndexK6Matrixi"], [15, "_CPPv417slap_Linear2IndexK6Matrixi"]], "slap_matrixfromarray (c++ function)": [[8, "_CPPv420slap_MatrixFromArrayiiPd"], [16, "_CPPv420slap_MatrixFromArrayiiPd"]], "slap_mindim (c++ function)": [[8, "_CPPv411slap_MinDim6Matrix"]], "slap_nullmatrix (c++ function)": [[8, "_CPPv415slap_NullMatrixv"], [16, "_CPPv415slap_NullMatrixv"]], "slap_numcols (c++ function)": [[8, "_CPPv412slap_NumCols6Matrix"]], "slap_numelements (c++ function)": [[8, "_CPPv416slap_NumElementsK6Matrix"]], "slap_numrows (c++ function)": [[8, "_CPPv412slap_NumRows6Matrix"]], "slap_reshape (c++ function)": [[8, "_CPPv412slap_Reshape6Matrixii"]], "slap_setelement (c++ function)": [[8, "_CPPv415slap_SetElement6Matrixiid"], [15, "_CPPv415slap_SetElement6Matrixiid"]], "slap_setnull (c++ function)": [[8, "_CPPv412slap_SetNullP6Matrix"], [16, "_CPPv412slap_SetNullP6Matrix"]], "slap_stride (c++ function)": [[8, "_CPPv411slap_StrideK6Matrix"]], "slap_transpose (c++ function)": [[8, "_CPPv414slap_Transpose6Matrix"]], "slap_addidentity (c++ function)": [[9, "_CPPv416slap_AddIdentity6Matrixd"]], "slap_scalebyconst (c++ function)": [[9, "_CPPv417slap_ScaleByConst6Matrixd"]], "slap_setconst (c++ function)": [[9, "_CPPv413slap_SetConst6Matrixd"]], "slap_setdiagonal (c++ function)": [[9, "_CPPv416slap_SetDiagonal6MatrixPKdi"]], "slap_setidentity (c++ function)": [[9, "_CPPv416slap_SetIdentity6Matrixd"]], "slap_setrange (c++ function)": [[9, "_CPPv413slap_SetRange6Matrixdd"]], "slap_argmax (c++ function)": [[10, "_CPPv411slap_ArgMax6MatrixPd"]], "slap_argmin (c++ function)": [[10, "_CPPv411slap_ArgMin6MatrixPd"]], "slap_max (c++ function)": [[10, "_CPPv48slap_Max6Matrix"]], "slap_min (c++ function)": [[10, "_CPPv48slap_Min6Matrix"]], "slap_norminf (c++ function)": [[10, "_CPPv412slap_NormInf6Matrix"]], "slap_normone (c++ function)": [[10, "_CPPv412slap_NormOne6Matrix"]], "slap_normtwo (c++ function)": [[10, "_CPPv412slap_NormTwo6Matrix"]], "slap_normtwosquared (c++ function)": [[10, "_CPPv419slap_NormTwoSquared6Matrix"]], "slap_sum (c++ function)": [[10, "_CPPv48slap_Sum6Matrix"]], "slap_crossproduct (c++ function)": [[11, "_CPPv417slap_CrossProduct6Matrix6Matrix6Matrix"]], "slap_innerproduct (c++ function)": [[11, "_CPPv417slap_InnerProduct6Matrix6Matrix"]], "slap_outerproduct (c++ function)": [[11, "_CPPv417slap_OuterProduct6Matrix6Matrix6Matrix"]], "slap_quadraticform (c++ function)": [[11, "_CPPv418slap_QuadraticForm6Matrix6Matrix6Matrix"]], "slap_freematrix (c++ function)": [[16, "_CPPv415slap_FreeMatrixP6Matrix"]], "slap_newmatrix (c++ function)": [[16, "_CPPv414slap_NewMatrixii"]], "slap_newmatrixzeros (c++ function)": [[16, "_CPPv419slap_NewMatrixZerosii"]], "matrix (c++ struct)": [[19, "_CPPv46Matrix"]], "matrix::cols (c++ member)": [[19, "_CPPv4N6Matrix4colsE"]], "matrix::data (c++ member)": [[19, "_CPPv4N6Matrix4dataE"]], "matrix::is_transposed (c++ member)": [[19, "_CPPv4N6Matrix13is_transposedE"]], "matrix::mattype (c++ member)": [[19, "_CPPv4N6Matrix7mattypeE"]], "matrix::rows (c++ member)": [[19, "_CPPv4N6Matrix4rowsE"]], "matrix::sy (c++ member)": [[19, "_CPPv4N6Matrix2syE"]], "slap_getdata (c++ function)": [[19, "_CPPv412slap_GetData6Matrix"]]}})