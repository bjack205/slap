name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler:
          - [gcc, g++]
          - [clang, clang++]

    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: | 
        sudo apt-get install libeigen3-dev -y
        sudo apt-get install clang -y

    - name: Configure CMake
      run: |
        mkdir ${{github.workspace}}/build && cd build
        cmake -D CMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
              -D CMAKE_C_COMPILER=${{ matrix.compiler[0] }} \
              -D CMAKE_CXX_COMPILER=${{ matrix.compiler[1] }} \
              --log-context ..

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{ env.BUILD_TYPE }}

    - name: Test
      working-directory: ${{ github.workspace }}/build
      run: ctest -C ${{ env.BUILD_TYPE }} .
      
  codecov:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0
    - name: Install Dependencies
      run: sudo apt-get install libeigen3-dev -y
    - name: Configure CMake
      run: |
        mkdir ${{github.workspace}}/build && cd build
        cmake -D CMAKE_BUILD_TYPE=Debug \
              -D SLAP_CODE_COVERAGE=ON \
              --log-context ..
    - name: Build
      run: cmake --build ${{ github.workspace }}/build
    - name: Run Tests
      working-directory: ${{ github.workspace }}/build
      run: ctest .
    - name: Process code coverage results
      working-directory: ${{ github.workspace }}/build
      run: ls ${{ github.workspace }}/build/src/slap/CMakeFiles/slap.dir
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        gcov: true
        gcov_include: ${{ github.workspace }}/src/slap
        directory: ${{ github.workspace }}/build/src/slap/CMakeFiles/slap.dir
        fail_ci_if_error: true

